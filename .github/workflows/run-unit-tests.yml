name: pytest unittest action scriptg

on:
  pull_request:
      branches: [ "develop", "master" ]
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # - name: Download artifact
      #   id: download-artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     # Optional, the status or conclusion of a completed workflow to search for
      #     # Can be one of a workflow conclusion:
      #     #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
      #     # Or a workflow status:
      #     #   "completed", "in_progress", "queued"
      #     # Use the empty string ("") to ignore status or conclusion in the search
      #     workflow_conclusion: success
      #     pr: ${{github.event.pull_request.number}} # so we have a new artifact for each unittest
      #     # Optional, uploaded artifact name,
      #     # will download all artifacts if not specified
      #     # and extract them into respective subdirectories
      #     # https://github.com/actions/download-artifact#download-all-artifacts
      #     name: datasets  
      #     # Optional, a directory where to extract artifact(s), defaults to the current directory
      #     path: /home/runner/.cache/pyhealth/datasets/
      #     # Optional, search for the last workflow run whose stored an artifact named as in `name` input
      #     # default false
      #     search_artifacts: true
      #     # Optional, choose how to exit the action if no artifact is found
      #     # can be one of:
      #     #  "fail", "warn", "ignore"
      #     # default fail
      #     if_no_artifact_found: warn
       
      # - name: Validate cached data is correctly placed # no output when artifacts not found
      #   run: | 
      #     if test -d /home/runner/.cache/pyhealth/datasets/; then ls -al /home/runner/.cache/pyhealth/datasets/; fi 

      - name: Test with pytest
        run: |
          cd pyhealth/unittests
          pytest -rP
  
      # - name: dataset pickles to upload
      #   run: |
      #     ls -al /home/runner/.cache/pyhealth/datasets/
      # - name: upload datasets pickle
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: datasets
      #     path: /home/runner/.cache/pyhealth/datasets/
